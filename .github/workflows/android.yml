#name: Android CI
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: set up JDK 11
#      uses: actions/setup-java@v3
#      with:
#        java-version: '11'
#        distribution: 'temurin'
#        cache: gradle
#
#    - name: Grant execute permission for gradlew
#      run: chmod +x gradlew
#    - name: Build with Gradle
#      run: ./gradlew build

#name: Android CI
#
#env:
#  # The name of the main module repository
#  main_project_module: app
#
#on:
#  # Triggers the workflow on push or pull request events but only for default and protected branches
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v1
#
#      # Set Current Date As Env Variable
#      - name: Set current date as env variable
#        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
#
#      # Set Repository Name As Env Variable
#      - name: Set repository name as env variable
#        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
#
#      - name: Set Up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Change wrapper permissions
#        run: chmod +x ./gradlew
#
#      # Run Tests Build
#      - name: Run gradle tests
#        run: ./gradlew test
#
#      # Run Build Project
#      - name: Build gradle project
#        run: ./gradlew build
#
#      # Create APK Debug
#      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
#        run: ./gradlew assembleDebug
#
#      # Create APK Release
#      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
#        run: ./gradlew assemble
#
#      # Upload Artifact Build
#      # Noted For Output [main_project_module]/build/outputs/apk/debug/
#      - name: Upload APK Debug - ${{ env.repository_name }}
#        uses: actions/upload-artifact@v2
#        with:
#          name: ${{ env.date_today }}- ${{ env.repository_name }} - APK(s) debug generated
#          path: ${{ env.main_project_module }}/build/outputs/apk/debug/
#
#      # Noted For Output [main_project_module]/build/outputs/apk/release/
#      - name: Upload APK Release - ${{ env.repository_name }}
#        uses: actions/upload-artifact@v2
#        with:
#          name: ${{ env.date_today }} - ${{ env.repository_name }} - APK(s) release generated
#          path: ${{ env.main_project_module }}/build/outputs/apk/release/
#
#  release:
#    name: Release APK
#    needs: build
#    if: startsWith(github.ref, 'refs/tags/v')
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download APK from build
#        uses: actions/download-artifact@v1
#        with:
#          name: apk
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#      - name: Upload Release APK
#        id: upload_release_asset
#        uses: actions/upload-release-asset@v1.0.1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: apk/app-debug.apk
#          asset_name: MensaApp.apk
#          asset_content_type: application/zip

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Run Tests
        run: bash ./gradlew test --stacktrace
  apk:
    name: Generate APK
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build APK
        run: bash ./gradlew assembleDebug --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk
  release:
    name: Release APK
    needs: apk
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: MensaApp.apk
          asset_content_type: application/zip